{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","liked","allPosts","React","createElement","className","SearchPanel","_Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","term","onUpdateSearch","bind","_assertThisInitialized","_inherits","_createClass","key","value","e","target","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","_this2","map","_this2$props","filter","onFilterSelect","clazz","concat","onClick","PostListItem","apply","arguments","_this$props","onDelete","onToggleImportant","onToggleLiked","like","classNames","important","PostList","posts","elements","item","id","itemProps","_objectWithoutProperties","Object","assign","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","deleteItem","addItem","maxId","index","findIndex","elem","_toConsumableArray","slice","body","newItem","_ref2","_ref3","old","_objectSpread","_ref4","items","length","indexOf","_this$state","visiblePosts","filterPost","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8e28d90.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\nexport default AppHeader;","import React from 'react';\n\nimport './app-header.css'\n\nconst AppHeader = ({liked, allPosts}) => {\n    return (\n        <div className = 'app-header d-flex'>\n            <h1> Yevhenii Nemchenko </h1>\n            <h2>{allPosts} записей, из них понравилось {liked}</h2>\n        </div>\n    )\n}\n\nexport default AppHeader;","import SearchPanel from './search-panel';\nexport default SearchPanel;","import React, {Component} from 'react';\n\nimport './search-panel.css'\n\nexport default class SearchPanel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            term: ''\n        }\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\n    }\n\n    onUpdateSearch(e) {\n        const term = e.target.value;\n        this.setState({term});\n        this.props.onUpdateSearch(term);\n    }\n    \n    render() {\n        return (\n            <input\n                className = 'form-control search-input'\n                type = 'text'\n                placeholder = 'Поиск по записям'\n                value = {this.state.term}\n                onChange = {this.onUpdateSearch}\n            />\n        )\n    }\n}","import PostStatusFilter from './post-status-filter';\nexport default PostStatusFilter;","import React, {Component} from 'react';\n\nimport './post-status-filter.css';\n\nexport default class PostStatusFilter extends Component {\n    constructor (props) {\n        super(props);\n        this.buttons = [\n            {name: 'all', label: 'Все'},\n            {name: 'like', label: 'Понрав. '}\n        ];\n    }\n\n    render() {\n        const buttons = this.buttons.map(({name, label}) => {\n            const {filter, onFilterSelect} = this.props;\n            const active = filter === name;\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary'\n            return (\n                <button type = 'button'\n                    className = {`btn ${clazz}`}\n                    key = {name}\n                    onClick = {() => onFilterSelect(name)}>\n                    {label}\n                </button>\n            )\n        });\n\n        return (\n            <div className = 'btn-group'>\n                {buttons}\n            </div>\n        )\n    }\n}","import PostListItem from './post-list-item';\nexport default PostListItem;","import React, {Component} from 'react';\n\nimport './post-list-item.css';\n\nexport default class PostListItem extends Component {\n\n    render() {\n        const {label, onDelete, onToggleImportant, onToggleLiked, like, important} = this.props;\n        let classNames = 'app-list-item d-flex justify-content-between';\n    \n        if (important) {\n            classNames += ' important';\n        }\n\n        if (like) {\n            classNames += ' like';\n        }\n\n        return (\n            <div className={classNames}>\n\n                <span\n                    className = 'app-list-item-label'\n                    onClick = {onToggleLiked}>\n                    {label}\n                </span>\n\n                <div className = 'd-flex justify-content-center align-items-center'>\n                    \n                    <button\n                        type = 'button'\n                        className = 'btn-star btn-sm'\n                        onClick = {onToggleImportant}>\n                        <i className = 'fa fa-star'></i>\n                    </button>\n\n                    <button\n                        type = 'button'\n                        className = 'btn-trash btn-sm'\n                        onClick = {onDelete}>\n                        <i className = 'fa fa-trash-o'></i>\n                    \n                    </button>\n                    \n                    <i className = 'fa fa-heart'></i>\n                    \n                </div>\n\n            </div>\n        )\n    \n    }\n}","import PostList from './post-list';\nexport default PostList;","import React from \"react\";\n\nimport PostListItem from '../post-list-item';\nimport './post-list.css';\n\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\n    \n    const elements = posts.map((item) => {\n        const {id, ...itemProps} = item;\n        return (\n            <li key = {id} className = 'list-group-item'>\n                <PostListItem\n                    {...itemProps}\n                    onDelete = {() => onDelete(id)}\n                    onToggleImportant = {() => onToggleImportant(id)}\n                    onToggleLiked = {() => onToggleLiked(id)}/>\n            </li>\n        )\n    });\n\n    return (\n        <ul className = 'app-list list-group'>\n            {elements}\n        </ul>\n    )\n}\n\nexport default PostList;","import PostAddForm from './post-add-form';\nexport default PostAddForm;","import React, {Component} from 'react';\n\nimport './post-add-form.css'\n\nexport default class PostAddForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: ''\n        };\n        this.onValueChange = this.onValueChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    \n    onValueChange(e) {\n        this.setState({\n            text: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        this.props.onAdd(this.state.text);\n        this.setState({\n            text: ''\n        });\n    }\n\n    render() {\n        return (\n            <form\n                className = 'bottom-panel d-flex'\n                onSubmit = {this.onSubmit}>\n\n                <input\n                    type = 'text'\n                    placeholder = 'О чем вы сейчас думаете?'\n                    className = 'form-control new-post-label'\n                    onChange = {this.onValueChange}\n                    value = {this.state.text}\n                />\n                <button\n                    type = 'submit'\n                    className = 'btn btn-outline-secondary'>\n                    Добавить\n                </button>\n\n            </form>         \n        )\n    }\n}","import App from './app'\nexport default App;","import React, {Component} from 'react';\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport PostStatusFilter from '../post-status-filter';\nimport PostList from '../post-list';\nimport PostAddForm from '../post-add-form';\n\nimport './app.css';\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [\n                {label: 'Going to learn React', important: true, like: false, id: 1},\n                {label: 'That is so good', important: false, like: false, id: 2},\n                {label: 'I need a break...', important: false, like: false, id: 3}\n            ],\n            term: '',\n            filter: 'all'\n        };\n        this.deleteItem = this.deleteItem.bind(this);\n        this.addItem = this.addItem.bind(this);\n        this.onToggleImportant = this.onToggleImportant.bind(this);\n        this.onToggleLiked = this.onToggleLiked.bind(this);\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\n        this.onFilterSelect = this.onFilterSelect.bind(this);\n        this.maxId = 4;\n    }\n\n    deleteItem(id) {\n        this.setState(({data}) => {\n            const index = data.findIndex(elem => elem.id === id);\n            \n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\n\n            return {\n                data: newArr\n            }\n        });\n    }\n\n    addItem(body) {\n        const newItem = {\n            label: body,\n            important: false,\n            id: this.maxId++\n        }\n        this.setState(({data}) => {\n            const newArr = [...data, newItem];\n            \n            return {\n                data: newArr\n            }\n        })\n    }\n\n    onToggleImportant(id) {\n        this.setState(({data}) => {\n            const index = data.findIndex(elem => elem.id === id);\n\n            const old = data[index];\n            const newItem = {...old, important: !old.important};\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n            \n            return {\n                data: newArr\n            }\n        });\n    }\n\n    onToggleLiked(id) {\n        this.setState(({data}) => {\n            const index = data.findIndex(elem => elem.id === id);\n\n            const old = data[index];\n            const newItem = {...old, like: !old.like};\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n\n            return {\n                data: newArr\n            }\n        });\n    }\n\n    searchPost(items, term) {\n        if (term.length === 0) {\n            return items\n        }\n\n        return items.filter((item) => {\n            return item.label.indexOf(term) > -1\n        });\n    }\n\n    filterPost(items, filter) {\n        if (filter === 'like') {\n            return items.filter(item => item.like)\n        } else {\n            return items\n        }\n    }\n\n    onUpdateSearch(term) {\n        this.setState({term})\n    }\n\n    onFilterSelect(filter) {\n        this.setState({filter})\n    }\n\n    render() {\n        const {data, term, filter} = this.state;\n        \n        const liked = data.filter((item) => item.like).length;\n        const allPosts = data.length;\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\n        \n        return (\n            <div className = 'app'>\n                <AppHeader liked = {liked} allPosts = {allPosts}/>\n                <div className = 'search-panel d-flex'>\n                    <SearchPanel\n                        onUpdateSearch = {this.onUpdateSearch}/>\n                    <PostStatusFilter\n                        filter = {filter}\n                        onFilterSelect = {this.onFilterSelect}/>\n                </div>\n\n                <PostList \n                    posts = {visiblePosts}\n                    onDelete = {this.deleteItem}\n                    onToggleImportant = {this.onToggleImportant}\n                    onToggleLiked = {this.onToggleLiked}/>\n                    <PostAddForm   \n                        onAdd = {this.addItem}/>\n            </div>\n        )    \n    \n    }\n    \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './components/app/'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}